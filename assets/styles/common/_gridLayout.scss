@use "sass:math";
@use "variables" as *;
@use "mixins" as *;

$grids: 2,3,4,5,6,7,8;

.iconList-grid {

	@each $col in $grids {
		&-#{$col} {

			ul.elementor-icon-list-items {
				display: grid;
				grid-template-columns: repeat($col, 100% / $col);
			}
		}
	}
}

.grid {

	&-template-col {

		@each $col in $grids {
			&-#{$col},
			&-#{$col}>div>ul.elementor-icon-list-items {
				grid-template-columns: repeat($col, 1fr);
			}
		}

		@media (min-width: $breakpoint-tablet) {

			&-tablet {

				@each $col in $grids {
					&-#{$col},
					&-#{$col}>div>ul.elementor-icon-list-items {
						grid-template-columns: repeat($col, 1fr);
					}
				}
			}
		}

		@media (min-width: $breakpoint-tablet-landscape) {

			&-desktop {

				@each $col in $grids {
					&-#{$col}, &-#{$col} > div > ul.elementor-icon-list-items {
						grid-template-columns: repeat($col, 1fr);
					}
				}
			}
		}
	}

	&-col {

		@each $col in $grids {
			&-#{$col} {
				grid-column: span $col;
			}
		}

		@media (min-width: $breakpoint-tablet) {

			&-tablet {

				@each $col in $grids {
					&-#{$col} {
						grid-column: span $col;
					}
				}
			}
		}

		@media (min-width: $breakpoint-tablet-landscape) {

			&-desktop {

				@each $col in $grids {
					&-#{$col} {
						grid-column: span $col;
					}
				}
			}
		}
	}

	&-row {

		@each $row in $grids {
			&-#{$row} {
				grid-row: span $row;
			}
		}

		@media (min-width: $breakpoint-tablet) {

			&-tablet {

				@each $row in $grids {
					&-#{$row} {
						grid-row: span $row;
					}
				}
			}
		}

		@media (min-width: $breakpoint-tablet-landscape) {

			&-desktop {

				@each $row in $grids {
					&-#{$row} {
						grid-row: span $row;
					}
				}
			}
		}
	}
}
